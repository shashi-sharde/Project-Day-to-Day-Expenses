function ExpenseDetails(event){
    event.preventDefault(event);
    const MoneySpent = event.target.number.value;
    const Description = event.target.description.value;
    const Categories = event.target.categories.value;
   
    const obj = {
        MoneySpent,
        Description,
        Categories
    }
    const token = localStorage.getItem('token')
    axios.post('http://localhost:3000/users/login/add-expense', obj,{ headers: {"Authorization" : token} })
    .then((response)=>{
        DisplayOnScreen(response.data.newExpenseDetails)
        console.log(response)
    })
    .catch((err)=>{
        console.log(err)
    })
}
window.addEventListener("DOMContentLoaded", (event) => {
    const token = localStorage.getItem('token')
    console.log("token",token)
    axios.get('http://localhost:3000/users/login/get-expense',{ headers: {"Authorization" : token} })
    .then((response)=>{
        console.log(response.data)
        for(i=0;i<response.data.length;i++){
            DisplayOnScreen(response.data[i])
            
        }
    })
    .catch((err)=>{
        console.log(err)
    })
})
function DisplayOnScreen(expense){
    const parentNode = document.getElementById("NumberOfExpenses")
    const childNode = `<li id=${expense.id}>${expense.Categories}: Money Spent - Rs ${expense.MoneySpent}- on ${expense.Description}
    <button onclick=deleteExpense('${expense.id}')> Delete</li>`
    parentNode.innerHTML = parentNode.innerHTML + childNode

}

function deleteExpense(expenseId){
    axios.delete(`http://localhost:3000/users/login/delete-expense/${expenseId}`)
    removeExpenseFromScreen(expenseId);
}
function removeExpenseFromScreen(expenseId){
    const parentNode = document.getElementById('NumberOfExpenses');
    const childNodeToBeDeleted = document.getElementById(expenseId);

    parentNode.removeChild(childNodeToBeDeleted);
}
document.getElementById('rzp-button1').onclick =async function(e){ //creating onclicK event
const token =localStorage.getItem('token')//Fetching the token for the particular User
//making the request using network call
const response= await axios.get('http://localhost:3000/purchase/premiummembership', {headers: {"Authorization" : token }});
console.log(response);
//There will be various options so creating and option and will use it for the switching between the payment status 
var options = 
{    
// In below two lines we are only sending the key which is generated by razorpay for our company and 
// in the 2nd line sending the order id by taking it from backend 
// And this happens at frontend when event gets clicked. Here we are not giving the amount and currency 
//as order already created all the things we are giving the in backend and razorpay only 
//verifies the order id and remembers the price and all from its dashboard
"key": response.data.key_id, //Key ID generated from the Dashboard
"order_id": response.data.order.id, // for One time payment 

// this handler only gets called when payment gets successfull
"handler" : async function(response){
    const res = axios.post('http://localhost:3000/purchase/updateTransactionStatus',{
        order_id: options.order_id,
        payment_id: response.razorpay_payment_id,
    }, {headers : {"Authorization" : token}})

    //Sending the messege after successfull payment
    alert('You are a Premium User Now');

    // making the buy premium button non visible after successfull payment
    document.getElementById('rzp-button1').style.visibility='hidden'

    //Showing user that he/she is a premium USer
    document.getElementById('message').innerHTML = 'Premium User';
    //Also setting the token after that 
    localStorage.setItem('token', res.data.token)

},
};

//once click on the event for opeing the razorpay window
const rzp1 = new Razorpay(options);
rzp1.open();
e.preventDefault();
//Sending the 
rzp1.on('payment.failed', function(response){
console.log(response)
alert("Something went Wrong!")
});
}


